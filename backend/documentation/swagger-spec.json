{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "App"
        ]
      }
    },
    "/api/communities/{communityId}/announcements": {
      "get": {
        "operationId": "AnnouncementController_findAll",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "publishedAfter",
            "required": false,
            "in": "query",
            "description": "Filter announcements published after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of announcements with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnnouncementDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List announcements for a community",
        "tags": [
          "Announcements"
        ]
      },
      "post": {
        "operationId": "AnnouncementController_create",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAnnouncementDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Announcement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementDto"
                }
              }
            }
          }
        },
        "summary": "Create an announcement",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/api/communities/{communityId}/announcements/count": {
      "get": {
        "operationId": "AnnouncementController_count",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "publishedAfter",
            "required": false,
            "in": "query",
            "description": "Count announcements published after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of announcements published after the specified date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountAnnouncementDto"
                }
              }
            }
          }
        },
        "summary": "Count announcements published after a specific date",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/api/communities/{communityId}/announcements/{id}": {
      "get": {
        "operationId": "AnnouncementController_findOne",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Announcement ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Announcement found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementDto"
                }
              }
            }
          }
        },
        "summary": "Get an announcement by ID",
        "tags": [
          "Announcements"
        ]
      },
      "patch": {
        "operationId": "AnnouncementController_update",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Announcement ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateAnnouncementDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Announcement updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnouncementDto"
                }
              }
            }
          }
        },
        "summary": "Update an announcement",
        "tags": [
          "Announcements"
        ]
      },
      "delete": {
        "operationId": "AnnouncementController_remove",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Announcement ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Announcement deleted"
          }
        },
        "summary": "Delete an announcement",
        "tags": [
          "Announcements"
        ]
      }
    },
    "/api/communities": {
      "get": {
        "operationId": "CommunityController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "title",
            "required": false,
            "in": "query",
            "description": "Filter by community title (partial match)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by community type",
            "schema": {
              "type": "string",
              "enum": [
                "CLASS",
                "FREE"
              ]
            }
          },
          {
            "name": "createdAfter",
            "required": false,
            "in": "query",
            "description": "Filter communities created after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "name": "schoolYear",
            "required": false,
            "in": "query",
            "description": "Filter by school year",
            "schema": {
              "example": 2025,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of communities with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "List communities",
        "tags": [
          "Communities"
        ]
      },
      "post": {
        "operationId": "CommunityController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCommunityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Community created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create a new community",
        "tags": [
          "Communities"
        ]
      }
    },
    "/api/communities/{id}": {
      "get": {
        "operationId": "CommunityController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "fields",
            "required": false,
            "in": "query",
            "description": "Comma-separated field list",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Community found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get a community by ID",
        "tags": [
          "Communities"
        ]
      },
      "patch": {
        "operationId": "CommunityController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommunityDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Community updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update a community",
        "tags": [
          "Communities"
        ]
      },
      "delete": {
        "operationId": "CommunityController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Community deleted"
          }
        },
        "summary": "Delete a community",
        "tags": [
          "Communities"
        ]
      }
    },
    "/api/communities/{id}/secret-code": {
      "get": {
        "operationId": "CommunityController_getSecretCode",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Secret code retrieved (only for admins)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get community secret code",
        "tags": [
          "Communities"
        ]
      }
    },
    "/api/communities/{id}/welcome-note": {
      "patch": {
        "operationId": "CommunityController_updateWelcomeNote",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Welcome note updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update welcome note",
        "tags": [
          "Communities"
        ]
      }
    },
    "/api/communities/{id}/stats": {
      "get": {
        "operationId": "CommunityController_getStats",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Community statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommunityResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get community statistics",
        "tags": [
          "Communities"
        ]
      }
    },
    "/api/communities/{communityId}/folders": {
      "get": {
        "operationId": "FolderController_findAll",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "name",
            "required": false,
            "in": "query",
            "description": "Filter by folder name (partial match)",
            "schema": {
              "example": "Documents",
              "type": "string"
            }
          },
          {
            "name": "parentId",
            "required": false,
            "in": "query",
            "description": "Filter by parent folder ID",
            "schema": {
              "example": 123,
              "type": "number"
            }
          },
          {
            "name": "rootOnly",
            "required": false,
            "in": "query",
            "description": "Get only root folders",
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of folders with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FolderDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List folders in a community",
        "tags": [
          "Folders"
        ]
      },
      "post": {
        "operationId": "FolderController_create",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFolderDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Folder created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderDto"
                }
              }
            }
          }
        },
        "summary": "Create a folder in a community",
        "tags": [
          "Folders"
        ]
      }
    },
    "/api/communities/{communityId}/folders/roots": {
      "get": {
        "operationId": "FolderController_findRoots",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of root folders",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FolderDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Get root folders for a community",
        "tags": [
          "Folders"
        ]
      }
    },
    "/api/communities/{communityId}/folders/{id}": {
      "get": {
        "operationId": "FolderController_findOne",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Folder ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Folder details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderDetailDto"
                }
              }
            }
          }
        },
        "summary": "Get folder details",
        "tags": [
          "Folders"
        ]
      },
      "patch": {
        "operationId": "FolderController_update",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Folder ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFolderDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Folder updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FolderDto"
                }
              }
            }
          }
        },
        "summary": "Update a folder",
        "tags": [
          "Folders"
        ]
      },
      "delete": {
        "operationId": "FolderController_remove",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Folder ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Folder deleted"
          }
        },
        "summary": "Delete a folder",
        "tags": [
          "Folders"
        ]
      }
    },
    "/api/invitations": {
      "get": {
        "operationId": "InvitationController_findAll",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "communityId",
            "required": false,
            "in": "query",
            "description": "Community ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "userId",
            "required": false,
            "in": "query",
            "description": "User ID",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "required": false,
            "in": "query",
            "description": "Filter by status",
            "schema": {
              "type": "string",
              "enum": [
                "PENDING",
                "ACCEPTED",
                "REJECTED"
              ]
            }
          },
          {
            "name": "sentAfter",
            "required": false,
            "in": "query",
            "description": "Filter invitations sent after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of invitations with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "summary": "List invitations",
        "tags": [
          "Invitations"
        ]
      },
      "post": {
        "operationId": "InvitationController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvitationDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Invitations created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvitationResponseDto"
                  }
                }
              }
            }
          }
        },
        "summary": "Create invitations",
        "tags": [
          "Invitations"
        ]
      }
    },
    "/api/invitations/{id}/status": {
      "put": {
        "operationId": "InvitationController_updateStatus",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Invitation ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvitationStatusDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation status updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationResponseDto"
                }
              }
            }
          }
        },
        "summary": "Accept or reject an invitation",
        "tags": [
          "Invitations"
        ]
      }
    },
    "/api/invitations/count": {
      "get": {
        "operationId": "InvitationController_countAfterDate",
        "parameters": [
          {
            "name": "communityId",
            "required": false,
            "in": "query",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "sentAfter",
            "required": true,
            "in": "query",
            "description": "Date to count invitations sent after (ISO format)",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation count",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        },
        "summary": "Count invitations sent after a specific date",
        "tags": [
          "Invitations"
        ]
      }
    },
    "/api/invitations/stats": {
      "get": {
        "operationId": "InvitationController_getStats",
        "parameters": [
          {
            "name": "communityId",
            "required": false,
            "in": "query",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Invitation statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvitationStatsDto"
                }
              }
            }
          }
        },
        "summary": "Get invitation statistics",
        "tags": [
          "Invitations"
        ]
      }
    },
    "/api/communities/{communityId}/members": {
      "get": {
        "operationId": "MembershipController_findByCommunity",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of members with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PageDto"
                }
              }
            }
          }
        },
        "summary": "List members of a community",
        "tags": [
          "Memberships"
        ]
      },
      "post": {
        "operationId": "MembershipController_addMember",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMembershipDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Member added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipResponseDto"
                }
              }
            }
          }
        },
        "summary": "Add a member to a community",
        "tags": [
          "Memberships"
        ]
      }
    },
    "/api/communities/join": {
      "post": {
        "description": "Creates a membership in the community using the secret code",
        "operationId": "MembershipController_joinCommunity",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JoinCommunityDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Joined community successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipResponseDto"
                }
              }
            }
          }
        },
        "summary": "Join a community using secret code",
        "tags": [
          "Memberships"
        ]
      }
    },
    "/api/communities/{communityId}/members/{userId}": {
      "patch": {
        "operationId": "MembershipController_updateMember",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMembershipDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Member updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MembershipResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update a member role",
        "tags": [
          "Memberships"
        ]
      },
      "delete": {
        "operationId": "MembershipController_removeMember",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "description": "User ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Member removed successfully"
          }
        },
        "summary": "Remove a member from a community",
        "tags": [
          "Memberships"
        ]
      }
    },
    "/api/communities/{communityId}/leave": {
      "post": {
        "description": "Current user leaves the community",
        "operationId": "MembershipController_leaveCommunity",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeaveCommunityOptionsDto"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Left community successfully"
          }
        },
        "summary": "Leave a community",
        "tags": [
          "Memberships"
        ]
      }
    },
    "/api/communities/{communityId}/resources": {
      "get": {
        "operationId": "ResourceController_findAll",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "Page number (zero-indexed)",
            "schema": {
              "default": 0,
              "type": "number"
            }
          },
          {
            "name": "size",
            "required": false,
            "in": "query",
            "description": "Number of items per page",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "type",
            "required": false,
            "in": "query",
            "description": "Filter by resource type",
            "schema": {
              "type": "string",
              "enum": [
                "IMAGE",
                "VIDEO",
                "SOUND",
                "ENT",
                "EXTERNAL_LINK"
              ]
            }
          },
          {
            "name": "addedAfter",
            "required": false,
            "in": "query",
            "description": "Filter resources added after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of resources with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResourceDto"
                  }
                }
              }
            }
          }
        },
        "summary": "List resources for a community",
        "tags": [
          "Resources"
        ]
      },
      "post": {
        "operationId": "ResourceController_create",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateResourceDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDto"
                }
              }
            }
          }
        },
        "summary": "Add a resource to a community",
        "tags": [
          "Resources"
        ]
      }
    },
    "/api/communities/{communityId}/resources/count": {
      "get": {
        "operationId": "ResourceController_count",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "addedAfter",
            "required": false,
            "in": "query",
            "description": "Count resources added after this date",
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Number of resources added after the specified date",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResourceDto"
                }
              }
            }
          }
        },
        "summary": "Count resources added after a specific date",
        "tags": [
          "Resources"
        ]
      }
    },
    "/api/communities/{communityId}/resources/{id}": {
      "get": {
        "operationId": "ResourceController_findOne",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResourceDto"
                }
              }
            }
          }
        },
        "summary": "Get a resource by ID",
        "tags": [
          "Resources"
        ]
      },
      "delete": {
        "operationId": "ResourceController_remove",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource removed"
          }
        },
        "summary": "Remove a resource from a community",
        "tags": [
          "Resources"
        ]
      }
    },
    "/api/communities/{communityId}/resources/{id}/folders/{folderId}": {
      "post": {
        "operationId": "ResourceController_addToFolder",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "folderId",
            "required": true,
            "in": "path",
            "description": "Folder ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource added to folder"
          }
        },
        "summary": "Add a resource to a folder",
        "tags": [
          "Resources"
        ]
      },
      "delete": {
        "operationId": "ResourceController_removeFromFolder",
        "parameters": [
          {
            "name": "communityId",
            "required": true,
            "in": "path",
            "description": "Community ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Resource ID",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "folderId",
            "required": true,
            "in": "path",
            "description": "Folder ID",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Resource removed from folder"
          }
        },
        "summary": "Remove a resource from a folder",
        "tags": [
          "Resources"
        ]
      }
    }
  },
  "info": {
    "title": "@edifice.io/community-backend",
    "description": "API description of community backend",
    "version": "1.0.0-develop-pedago.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "UserDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "displayName": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "displayName"
        ]
      },
      "AnnouncementDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "publicationDate": {
            "format": "date-time",
            "type": "string"
          },
          "modificationDate": {
            "format": "date-time",
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserDto"
          },
          "communityId": {
            "type": "number"
          }
        },
        "required": [
          "id",
          "content",
          "publicationDate",
          "author",
          "communityId"
        ]
      },
      "CreateAnnouncementDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Announcement content",
            "example": "Important information about our next class meeting"
          }
        },
        "required": [
          "content"
        ]
      },
      "CountAnnouncementDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          }
        },
        "required": [
          "count"
        ]
      },
      "UpdateAnnouncementDto": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "description": "Updated announcement content",
            "example": "Important information about our rescheduled class meeting"
          }
        },
        "required": [
          "content"
        ]
      },
      "SearchCommunityResponseDto": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "string",
            "description": "Comma-separated list of fields to include in the response",
            "example": "id,title,type"
          },
          "communities": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "total": {
            "type": "number"
          }
        }
      },
      "InitialInvitationDto": {
        "type": "object",
        "properties": {
          "userIds": {
            "description": "List of user IDs to invite",
            "example": [
              "b9ea566a-c3d4-41ef-9806-65d6beb3bddb",
              "b9ea566a-c3d4-41ef-9806-65d6beb3bddc"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "userIds"
        ]
      },
      "CreateCommunityDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Community illustration image"
          },
          "title": {
            "type": "string",
            "description": "Community title",
            "maxLength": 80,
            "example": "Math Class 2025"
          },
          "type": {
            "type": "string",
            "description": "Community type",
            "enum": [
              "CLASS",
              "FREE"
            ],
            "example": "CLASS"
          },
          "schoolYearStart": {
            "type": "number",
            "description": "School year start",
            "example": 2025
          },
          "schoolYearEnd": {
            "type": "number",
            "description": "School year end",
            "example": 2026
          },
          "welcomeNote": {
            "type": "string",
            "description": "Welcome note",
            "maxLength": 400,
            "example": "Welcome to our math community!"
          },
          "discussionEnabled": {
            "type": "boolean",
            "description": "Enable discussion features",
            "default": true
          },
          "secretCode": {
            "type": "string",
            "description": "Secret code to join the community",
            "example": "MATH2025"
          },
          "invitations": {
            "description": "Initial invitations to send",
            "allOf": [
              {
                "$ref": "#/components/schemas/InitialInvitationDto"
              }
            ]
          }
        },
        "required": [
          "title",
          "type",
          "discussionEnabled"
        ]
      },
      "CommunityStatsDto": {
        "type": "object",
        "properties": {
          "totalMembers": {
            "type": "number"
          },
          "acceptedMembers": {
            "type": "number"
          },
          "totalAdmins": {
            "type": "number"
          },
          "acceptedAdmins": {
            "type": "number"
          }
        },
        "required": [
          "totalMembers",
          "acceptedMembers",
          "totalAdmins",
          "acceptedAdmins"
        ]
      },
      "Function": {
        "type": "object",
        "properties": {}
      },
      "CommunityResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "image": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string"
          },
          "updateDate": {
            "format": "date-time",
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "CLASS",
              "FREE"
            ]
          },
          "schoolYearStart": {
            "type": "number"
          },
          "schoolYearEnd": {
            "type": "number"
          },
          "welcomeNote": {
            "type": "string"
          },
          "discussionEnabled": {
            "type": "boolean"
          },
          "archivedDate": {
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/components/schemas/UserDto"
          },
          "modifier": {
            "$ref": "#/components/schemas/UserDto"
          },
          "archiver": {
            "$ref": "#/components/schemas/UserDto"
          },
          "stats": {
            "$ref": "#/components/schemas/CommunityStatsDto"
          },
          "getSecretCode": {
            "description": "Secret code to join the community",
            "allOf": [
              {
                "$ref": "#/components/schemas/Function"
              }
            ]
          }
        },
        "required": [
          "id",
          "title",
          "creationDate",
          "type",
          "discussionEnabled",
          "creator"
        ]
      },
      "UpdateCommunityDto": {
        "type": "object",
        "properties": {
          "image": {
            "type": "string",
            "description": "Community illustration image"
          },
          "title": {
            "type": "string",
            "description": "Community title",
            "maxLength": 80,
            "example": "Math Class 2025"
          },
          "type": {
            "type": "string",
            "description": "Community type",
            "enum": [
              "CLASS",
              "FREE"
            ],
            "example": "CLASS"
          },
          "schoolYearStart": {
            "type": "number",
            "description": "School year start",
            "example": 2025
          },
          "schoolYearEnd": {
            "type": "number",
            "description": "School year end",
            "example": 2026
          },
          "welcomeNote": {
            "type": "string",
            "description": "Welcome note",
            "maxLength": 400,
            "example": "Welcome to our math community!"
          },
          "discussionEnabled": {
            "type": "boolean",
            "description": "Enable discussion features",
            "default": true
          },
          "secretCode": {
            "type": "string",
            "description": "Secret code to join the community",
            "example": "MATH2025"
          }
        },
        "required": [
          "title",
          "type",
          "discussionEnabled"
        ]
      },
      "FolderStatsDto": {
        "type": "object",
        "properties": {
          "childCount": {
            "type": "number",
            "description": "Number of child folders in this folder"
          }
        },
        "required": [
          "childCount"
        ]
      },
      "FolderDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Folder ID"
          },
          "name": {
            "type": "string",
            "description": "Folder name"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date"
          },
          "modificationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Last modification date"
          },
          "isRoot": {
            "type": "boolean",
            "description": "Whether this is a root folder"
          },
          "creator": {
            "description": "User who created the folder",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "modifier": {
            "description": "User who last modified the folder",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "parentId": {
            "type": "number",
            "description": "Parent folder ID"
          },
          "communityId": {
            "type": "number",
            "description": "Community ID"
          },
          "stats": {
            "description": "Folder statistics",
            "allOf": [
              {
                "$ref": "#/components/schemas/FolderStatsDto"
              }
            ]
          }
        },
        "required": [
          "id",
          "name",
          "creationDate",
          "isRoot",
          "creator",
          "communityId"
        ]
      },
      "CreateFolderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Folder name",
            "example": "Documents",
            "maxLength": 255
          },
          "parentId": {
            "type": "number",
            "description": "Parent folder ID (null if root folder)",
            "example": 123
          },
          "isRoot": {
            "type": "boolean",
            "description": "Whether this is a root folder",
            "default": false
          }
        },
        "required": [
          "name"
        ]
      },
      "ResourceDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "type": {
            "type": "string",
            "enum": [
              "IMAGE",
              "VIDEO",
              "SOUND",
              "ENT",
              "EXTERNAL_LINK"
            ]
          },
          "url": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "addedDate": {
            "format": "date-time",
            "type": "string"
          },
          "openInNewTab": {
            "type": "boolean"
          },
          "appName": {
            "type": "string"
          },
          "author": {
            "$ref": "#/components/schemas/UserDto"
          },
          "communityId": {
            "type": "number"
          },
          "folderIds": {
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "id",
          "type",
          "url",
          "title",
          "addedDate",
          "author",
          "communityId"
        ]
      },
      "FolderDetailDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "description": "Folder ID"
          },
          "name": {
            "type": "string",
            "description": "Folder name"
          },
          "creationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Creation date"
          },
          "modificationDate": {
            "format": "date-time",
            "type": "string",
            "description": "Last modification date"
          },
          "isRoot": {
            "type": "boolean",
            "description": "Whether this is a root folder"
          },
          "creator": {
            "description": "User who created the folder",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "modifier": {
            "description": "User who last modified the folder",
            "allOf": [
              {
                "$ref": "#/components/schemas/UserDto"
              }
            ]
          },
          "parentId": {
            "type": "number",
            "description": "Parent folder ID"
          },
          "communityId": {
            "type": "number",
            "description": "Community ID"
          },
          "stats": {
            "description": "Folder statistics",
            "allOf": [
              {
                "$ref": "#/components/schemas/FolderStatsDto"
              }
            ]
          },
          "subFolders": {
            "description": "Subfolders",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FolderDto"
            }
          },
          "resources": {
            "description": "Resources in this folder",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceDto"
            }
          }
        },
        "required": [
          "id",
          "name",
          "creationDate",
          "isRoot",
          "creator",
          "communityId"
        ]
      },
      "UpdateFolderDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Folder name",
            "example": "Documents",
            "maxLength": 255
          },
          "parentId": {
            "type": "number",
            "description": "Parent folder ID (null if root folder)",
            "example": 123
          }
        },
        "required": [
          "name"
        ]
      },
      "PageMetadataDto": {
        "type": "object",
        "properties": {
          "totalItems": {
            "type": "number"
          },
          "itemCount": {
            "type": "number"
          },
          "itemsPerPage": {
            "type": "number"
          },
          "totalPages": {
            "type": "number"
          },
          "currentPage": {
            "type": "number"
          }
        },
        "required": [
          "totalItems",
          "itemCount",
          "itemsPerPage",
          "totalPages",
          "currentPage"
        ]
      },
      "PageDto": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "meta": {
            "$ref": "#/components/schemas/PageMetadataDto"
          }
        },
        "required": [
          "items",
          "meta"
        ]
      },
      "CreateInvitationDto": {
        "type": "object",
        "properties": {
          "communityId": {
            "type": "number",
            "description": "Community ID",
            "example": 1
          },
          "userIds": {
            "description": "List of user IDs to invite",
            "example": [
              "b9ea566a-c3d4-41ef-9806-65d6beb3bddb",
              "b9ea566a-c3d4-41ef-9806-65d6beb3bddc"
            ],
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "message": {
            "type": "string",
            "description": "Optional message to include with invitation"
          }
        },
        "required": [
          "communityId",
          "userIds"
        ]
      },
      "CommunitySummaryDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "title"
        ]
      },
      "InvitationResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "invitationDate": {
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PENDING",
              "ACCEPTED",
              "REJECTED"
            ]
          },
          "community": {
            "$ref": "#/components/schemas/CommunitySummaryDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "id",
          "invitationDate",
          "status",
          "community",
          "user"
        ]
      },
      "UpdateInvitationStatusDto": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "New status for the invitation",
            "enum": [
              "PENDING",
              "ACCEPTED",
              "REJECTED"
            ],
            "example": "ACCEPTED"
          },
          "deleteSharedResources": {
            "type": "boolean",
            "description": "Whether to delete shared resources when rejecting invitation",
            "default": false
          }
        },
        "required": [
          "status"
        ]
      },
      "InvitationStatsDto": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number"
          },
          "accepted": {
            "type": "number"
          },
          "pending": {
            "type": "number"
          },
          "rejected": {
            "type": "number"
          }
        },
        "required": [
          "total",
          "accepted",
          "pending",
          "rejected"
        ]
      },
      "CreateMembershipDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "description": "User ID",
            "example": 1
          },
          "role": {
            "type": "string",
            "description": "Role in the community",
            "enum": [
              "ADMIN",
              "MEMBER"
            ],
            "default": "MEMBER"
          }
        },
        "required": [
          "userId",
          "role"
        ]
      },
      "MembershipResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "joinDate": {
            "format": "date-time",
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "MEMBER"
            ]
          },
          "lastVisitDate": {
            "format": "date-time",
            "type": "string"
          },
          "community": {
            "$ref": "#/components/schemas/CommunitySummaryDto"
          },
          "user": {
            "$ref": "#/components/schemas/UserDto"
          },
          "inviter": {
            "$ref": "#/components/schemas/UserDto"
          }
        },
        "required": [
          "id",
          "joinDate",
          "role",
          "community",
          "user"
        ]
      },
      "JoinCommunityDto": {
        "type": "object",
        "properties": {
          "secretCode": {
            "type": "string",
            "description": "Secret code to join the community"
          }
        },
        "required": [
          "secretCode"
        ]
      },
      "UpdateMembershipDto": {
        "type": "object",
        "properties": {
          "role": {
            "type": "string",
            "description": "Role in the community",
            "enum": [
              "ADMIN",
              "MEMBER"
            ]
          }
        }
      },
      "LeaveCommunityOptionsDto": {
        "type": "object",
        "properties": {
          "removeSharedResources": {
            "type": "boolean",
            "description": "Whether to remove shared resources",
            "default": false
          }
        },
        "required": [
          "removeSharedResources"
        ]
      },
      "CreateResourceDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Resource type",
            "enum": [
              "IMAGE",
              "VIDEO",
              "SOUND",
              "ENT",
              "EXTERNAL_LINK"
            ],
            "example": "EXTERNAL_LINK"
          },
          "url": {
            "type": "string",
            "description": "Resource URL",
            "example": "https://example.com/resource"
          },
          "title": {
            "type": "string",
            "description": "Resource title",
            "example": "Interesting Article"
          },
          "openInNewTab": {
            "type": "boolean",
            "description": "Whether to open in new tab (for links)",
            "default": true
          },
          "appName": {
            "type": "string",
            "description": "Application name (for ENT resources)"
          },
          "folderIds": {
            "description": "Folder IDs to add this resource to",
            "type": "array",
            "items": {
              "type": "number"
            }
          }
        },
        "required": [
          "type",
          "url",
          "title"
        ]
      },
      "CountResourceDto": {
        "type": "object",
        "properties": {
          "count": {
            "type": "number"
          }
        },
        "required": [
          "count"
        ]
      }
    }
  }
}
